getwd()
list.files()
tab <- read.csv('../msleep_ggplot2.csv')
tab$name
tab$name[1]
tab$name[[1]]
setwd("~/Rtut/")
weights <- c(300, 200, 100, 250, 150)
prices <- c(9000, 5000, 12000, 7500, 18000)
chests <- c('gold', 'silver', 'gems', 'gold', 'gems')
types <- factor(chests)
treasure <- data.frame(weights, prices, types)
print(treasure)
treasure[[3, 1]]
setwd('~/RStatistics/Module1/Assignment/Ass1/')
tab <- read.csv('../msleep_ggplot2.csv')
class(tab)
head(tab)
dim(tab)
?read.csv
tab$sleep_total[1]
c(tab$sleep_total, 1000)
length(tab$sleep_total)
e = c(1,2,4)
d = e
d
d == e
d[4] = 4
d
d == e
d = e
plot(tab$brainwt, tab$sleep_total)
plot(tab$brainwt, tab$sleep_total, log="x")
plot(tab$brainwt, tab$sleep_total, log="y")
plot(tab$brainwt, tab$sleep_total, log="x"
plot(tab$brainwt, tab$sleep_total, log="x")
plot(tab$brainwt, tab$sleep_total, log="x")
type(tab$sleep_total)
str(tab$sleep_total)
example(summmary)
example("summary.data.frame")
summary(tab)
str(summary(tab))
a<-summary(tab)
a
a[1]
a[100]
a[83]
a[5]
a[25]
a[order]
a["order""]
""
a["order"]
a[[2, 1]]
summary.data.frame(tab)
summary.data.frame(tab)[1]
summary(tab$sleep_total)
summary(tab$sleep_total)[4]
summary(tab$sleep_total)[5]
example("summary.factor")
tab[ c(1,2), ]
tab[ c(1,2), 83]
tab[ c(1,2), 82]
tab[ c(83), ]
tab[ c(84), ]
tab[ c(1), ]
head(tab)
tab$sleep_total
tab$sleep_total > 18
tab$sleep_total[ c(1,2) ]
tab[ tab$sleep_total > 18, ]
tab[ tab$sleep_total > 18 ]
tab[ 1 ]
tab[ 1 : 3]
tab[ 1, ]
tab$sleep_total[ tab$sleep_total > 18 ]
mean(tab$sleep_total[ tab$sleep_total > 18 ])
tab[ tab$sleep_total > 18, ]
tab[ tab$sleep_total > 18 ]
tab$sleep_total > 18
tab[ tab$sleep_total > 18, ]
tab[ tab$sleep_total > 18, 1]
tab$sleep_total > 18
which(tab$sleep_total > 18)
which(tab$sleep_total > 18 & tab$sleep_rem < 3)
sort(tab$sleep_total)
order(tab$sleep_total)
tab$sleep_total[ order(tab$sleep_total) ]
rank(c(1,2,2,3))
rank(c(3,2,2,3))
rank(tab$sleep_total)[1]
match(c("Cow","Owl monkey","Cheetah"), tab$name)
View(tab)
match(c("Cow","Owl monkey","Cetah"), tab$name)
match(c("Cotton rat"), tab$name)
vec = c("red","blue","red","green","green","yellow","orange")
fac = factor(vec)
fac
levels(fac)
fac2 = factor(vec, levels=c("blue","green","yellow","orange","red"))
fac2
levels(fac2)
table(tab$genus)
table(tab$name)
str(table(tab$genus))
str(table(tab$genus))
table(tab$name)
View(tab)
View(tab)
table(tab$order)
table(tab$order)[1]
table(tab$order)[1][1]
table(tab$order)[1, 1]
table(tab$order)["Rodentia"]
s = split(tab$sleep_total, tab$order)
s
tab$order
table(tab$order)[["Rodentia"]]
s = split(tab$sleep_total, tab$order)
mean(s[["Rodentia"]])
lapply(s, mean)
sapply(s, mean)
str(lapply(s, mean))
str(sapply(s, mean))
sapply(s, mean)[0]
sapply(s, mean)[1]
sapply(s, mean)["Affrosoricida"]
lapply(s, mean)["Affrosoricida"]
lapply(s, mean)["Afrosoricida"]
sapply(s, mean)["Afrosoricida"]
?lapply()
M <- matrix(seq(1,16), 4, 4)
M
sapply(s, mean)
sapply(s, mean)[1]
lapply(s, mean)[1]
sapply(s, mean)["Primates"]
tapply(tab$sleep_total, tab$order, sd)["primates"]
tapply(tab$sleep_total, tab$order, sd)["Primates"]
matrix(0, 3, 4)
a <- 1:12
a
matrix(a, 3, 4)
chests <- c('gold', 'silver', 'gems', 'gold', 'gems')
chests
types <- factor(chests)
types
as.integers(types)
as.int(types)
as.integer(types)
types <- factor(chests, levels = ('silver', 'gold', 'gems'))
types <- factor(chests, levels = c('silver', 'gold', 'gems'))
as.integer(types)
types <- factor(chests, levels = c('silver', 'gold'))
as.integer(types)
plot(weights, prices) #note the differences w.r.t where circles,traingles etc are drawn
legend("topright", levels(types), pch=1:length(levels(types)))
plot(weights, prices) #note the differences w.r.t where circles,traingles etc are drawn
legend("topright", levels(types), pch=1:length(levels(types)))
plot(weights, prices, legend("topright", levels(types), pch=1:length(levels(types)))) #note the differences w.r.t where circles,traingles etc are drawn
dim(tab)
summary(tab)
summary(tab)[["sleep_total"]]
str(summary(tab))
summary(tab)["sleep_total"]
summary(tab)$sleep_total
a
a$1
a[1]
str(a)
order(tab$sleep_total)
rank(c(10,2,2,3))
match(c("Cow","Owl monkey","Cheetah"), tab$name)
View(tab)
summary(tab$order)
summary(tab$order)["Rodentia"]
s = split(tab$sleep_total, tab$order)
s
rats <- data.frame(id = paste0("rat", 1:10),
sex = factor(rep(c("female", "male"), each = 5)),
weight = c(2, 4, 1, 11, 18, 12, 7, 12, 19, 20),
length = c(100, 105, 115, 130, 95, 150, 165, 180, 190, 175))
cbind(rats, ratsTable)
ratsTable <- data.frame(id = paste0("rat", c(6, 9, 7, 3, 5, 1, 10, 4, 8, 2)),
secretID = 1:10)
cbind(rats, ratsTable)
rats
cbind(rats[match(ratsTable$id, rats$id), ], ratsTable)
ratsMerged <- merge(rats, ratsTable, by.x = "id", by.y = "id")
ratsMerged[order(ratsMerged$secretID), ]
library(dplyr)
library('devtools')
install('dplyr')
install(dplyr)
install.packages('dplyr')
library(dplyr)
sexes <- group_by(rats, sex)
sexes
summarise(sexes, ave = mean(weight))
mean(sexes$weight)
tapply(ratsMerged$weight, ratsMerged$sex)
tapply(ratsMerged$weight, ratsMerged$sex, mean)
tapply(ratsMerged$weight, ratsMerged$sex, mean)[2]
tapply(ratsMerged$weight, ratsMerged$sex, mean)["Male"]
tapply(ratsMerged$weight, ratsMerged$sex, mean)[["Male"]]
str(tapply(ratsMerged$weight, ratsMerged$sex, mean))
s <- split(ratsMerged$weight, ratsMerged$sex)
lapply(s, mean)
lapply(s, mean)$female
sexes <- group_by(rats, sex)
summarise(sexes, mean(weight))
summarise(sexes, mean(length))
lapply
a = c(1,2)
a + 2
lapply(a, sum)
getwd()
setwd("~/papers")
source("http://bioconductor.org/biocLite.R")
biocLite()
library(affpy)
library(affy)
biocLite()
library(affy)
install.packages(affy)
install.packages("affy"")
;
)
""
install.packages("affy")
Data<-ReadAffy()
